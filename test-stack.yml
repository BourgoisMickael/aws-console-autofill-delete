AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

# Parameters:
#   DefaultVpcId:
#     Type: String
#   DefaultSubnetId:
#     Type: String

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  Queue:
    Type: AWS::SQS::Queue

  Topic:
    Type: AWS::SNS::Topic

  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: autofill-delete-test-user

  IAMAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IAMUser
      Status: Inactive

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: autofill-delete-test-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: !Ref AWS::AccountId

  IAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: autofill-delete-test-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: "*"

  DynamoGlobalTable:
    Type: AWS::DynamoDB::GlobalTable
    Properties:
      TableName: autofill-delete-test-globaltable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: GSI
          KeySchema:
            - AttributeName: id
              KeyType: HASH
          Projection: 
            ProjectionType: ALL
      Replicas:
        - Region: eu-west-3
        - Region: eu-west-2
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs14.x
      Handler: index.handler
      InlineCode: autofill-delete-test-lambda

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: autofill-delete-test-eventrule
      EventBusName: default
      EventPattern:
        source:
          - autofill-delete-test-rule
      State: "DISABLED"

  EventArchive:
    Type: AWS::Events::Archive
    Properties:
      ArchiveName: autofill-delete-test-archive
      SourceArn: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default

  EventConnection:
    Type: AWS::Events::Connection
    Properties:
      Name: autofill-delete-test-connection
      AuthorizationType: API_KEY
      AuthParameters:
        ApiKeyAuthParameters:
          ApiKeyName: autofill-delete-test-apikey
          ApiKeyValue: autofill-delete-test-value

  EventApiDestination:
    Type: AWS::Events::ApiDestination
    Properties:
      Name: autofill-delete-test-apidestination
      ConnectionArn: !GetAtt EventConnection.Arn
      HttpMethod: GET
      InvocationEndpoint: https://example.com

  EventBridgeGlobalEndpointHealthCheck:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://global-endpoint-downloads.s3.amazonaws.com/global-endpoint-healthcheck.yaml

  EventBridgeGlobalEndpoint:
    Type: AWS::Events::Endpoint
    Properties:
      Name: autofill-delete-test-globalendpoint
      EventBuses:
        - EventBusArn: !Sub arn:${AWS::Partition}:events:eu-west-3:${AWS::AccountId}:event-bus/default
        - EventBusArn: !Sub arn:${AWS::Partition}:events:eu-west-2:${AWS::AccountId}:event-bus/default
      ReplicationConfig:
        State: DISABLED
      RoutingConfig:
        FailoverConfig:
          Primary:
            HealthCheck: !Sub arn:${AWS::Partition}:route53:::healthcheck/${EventBridgeGlobalEndpointHealthCheck.Outputs.HealthCheckId}
          Secondary:
            Route: eu-west-2

  EventSchemaRegistry:
    Type: AWS::EventSchemas::Registry
    Properties:
      RegistryName: autofill-delete-test-registry

  EventSchemaSchema:
    Type: AWS::EventSchemas::Schema
    Properties:
      RegistryName: !GetAtt EventSchemaRegistry.RegistryName
      SchemaName: autofill-delete-test-schema@schema
      Type: OpenApi3
      Content: '{"openapi":"3.0.0","info":{"version": "1.0.0","title":""},"paths": {}}'

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: autofill-delete-test-pool
      LambdaConfig: 
        CustomMessage: !GetAtt Lambda.Arn

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: autofill-delete-test-client
      UserPoolId: !Ref UserPool

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: autofill-delete-test-domain
      UserPoolId: !Ref UserPool

  UserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref UserPool
      ProviderName: LoginWithAmazon
      ProviderType: LoginWithAmazon
      ProviderDetails:
        client_id: autofill-delete
        client_secret: autofill-delete
        authorize_scopes: autofill-delete
      AttributeMapping:
        username: user_id

  UserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: autofill-delete-test-group
      UserPoolId: !Ref UserPool

  UserPoolUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      MessageAction: SUPPRESS
      Username: autofill-delete-test-user
      UserPoolId: !Ref UserPool

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: autofill-delete-test-api

  # VpcFlowLog:
  #   Type: AWS::EC2::FlowLog
  #   Properties:
  #     LogDestinationType: s3
  #     LogDestination: !GetAtt Bucket.Arn
  #     ResourceId: !Ref DefaultVpcId
  #     ResourceType: VPC
  #     TrafficType: ALL

  # VpcEgressOnlyIG:
  #   Type: AWS::EC2::EgressOnlyInternetGateway
  #   Properties: 
  #     VpcId: !Ref DefaultVpcId

  # VpcEndpoint:
  #   Type: AWS::EC2::VPCEndpoint
  #   Properties: 
  #     ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
  #     VpcEndpointType: Gateway
  #     VpcId: !Ref DefaultVpcId

  # NatGateway:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     ConnectivityType: private
  #     SubnetId: !Ref DefaultSubnetId

  AthenaWorkGroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: autofill-delete-test-workgroup

  AthenaDataCatalog:
    Type: AWS::Athena::DataCatalog
    Properties:
      Name: autofill-delete-test-catalog
      Type: HIVE
      Parameters:
        metadata-function: !GetAtt Lambda.Arn

Outputs:
  UserPoolId:
    Value: !Ref UserPool